<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user.mybatis">
	
	<select id="getUserCount" resultType="int">
		SELECT nvl(count(*),0) FROM userlist
	</select>
	
	<select id="getUsers" parameterType="hashmap" resultType="User">
		select * from (select rownum rnum, a.* from (select email, name, pwd, tel, birth, cdate, ip, filename from userlist)a) 
	where rnum between #{startRow} and #{endRow} order by cdate desc
	</select>
	
	<select id="getUser" parameterType="hashmap" resultType="User">
		select * from userlist where email = #{email} and pwd = #{pwd}
	</select>
	
	<update id="updateUser" parameterType="User">
		update userlist set name=#{name}, pwd=#{pwd}, tel=#{tel}, birth=#{birth}, filename=#{filename} where email=#{email}	
	</update>
	
	<delete id="deleteUser" parameterType="hashmap">
		delete from userlist where email=#{email} and pwd=#{pwd}	
	</delete>
	
	<insert id="insertUser" parameterType="User">
		insert into userlist(email, name, pwd, tel, birth, cdate, ip, filename, filesize) values(#{email},#{name},#{pwd},#{tel},#{birth}, sysdate, #{ip},#{filename},#{filesize})
	</insert>
	
	<select id="confirmEmail" parameterType="hashmap" resultType="User">
		select email from userlist where email=#{email}
	</select>
	
	<!-- 보류 -->
	<select id="loginCheck" parameterType="hashmap" resultType="User">
		select pwd from userlist where email=#{email}
	</select>
	
	<!-- <select id="getArticleCount" resultType="int" parameterType="hashmap">
		select nvl(count(*), 0) from board
		<if test="boardid !=null">
			WHERE boardid = #{boardid}
		</if>
	</select>
	
	<select id="getArticles" resultType="Board" parameterType="hashmap">
	select * from (select rownum rnum, a.* from (select num, writer, email, subject, passwd, reg_date, readcount, ref, re_step, re_level, 
	content, ip from board where boardid = #{boardid} order by ref desc, re_step) a) where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="getNextNumber" resultType="int">
		select boardser.nextval from dual
	</select>
	
	<update id="updateRe_step" parameterType="Board">
		update board set re_step=re_step+1 where ref= #{ref} and re_step > #{re_step} and boardid = #{boardid}
	</update>
	
	<insert id="insertBoard" parameterType="Board">
		insert into board(num, writer, email, subject, passwd, reg_date, ref, re_step, re_level, content, ip, boardid, filename, filesize)
		values(#{num},#{writer},#{email},#{subject},#{passwd}, sysdate, #{ref},#{re_step},#{re_level},#{content},#{ip},#{boardid},#{filename},#{filesize})
	</insert>
	

	<update id="addReadCount" parameterType="hashmap">
		update board set readcount=readcount+1 where num = #{num} and boardid = #{boardid}
	</update>
	
	<select id="getArticle" parameterType="hashmap" resultType="Board">
		select * from board where num = #{num} and boardid = #{boardid}
	</select>
	
	<update id="updateArticle" parameterType="Board">
		update board set writer=#{writer}, email=#{email}, subject=#{subject}, content=#{content} where num=#{num} and passwd = #{passwd}
	</update>
	
	<delete id="deleteArticle" parameterType="hashmap">
		delete from board where num= #{num} and passwd = #{passwd}
	</delete> -->
</mapper>