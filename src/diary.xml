<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="diary.mybatis">
	
	<select id="getDiaryCount" resultType="int" parameterType="hashmap">
		SELECT nvl(count(*),0) FROM diary WHERE diaryid = #{diaryid} and email = #{email}
	</select>
	
	<select id="getDiaries" resultType="Diary" parameterType="hashmap">
		select * from (select rownum rnum, b.* from (select num, email, diaryid, subject, cdate, content, ip, filename0, filename1, filename2,
			filename3, filename4 from diary where diaryid = #{diaryid} and email = #{email} order by cdate desc) b) where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="getImgDiaryCountTotal" resultType="int" parameterType="hashmap">
		SELECT nvl(count(filename0),0) + nvl(count(filename1),0) + nvl(count(filename2),0) + nvl(count(filename3),0) + nvl(count(filename4),0)
			FROM diary WHERE diaryid = #{diaryid} and email=#{email}
	</select>
	
	<select id="getDiary" parameterType="hashmap" resultType="Diary">
		select * from diary where num = #{num} and email = #{email} and diaryid = #{diaryid}
	</select>
	
	<update id="updateDiary" parameterType="Diary">
		update diary set diaryid = #{diaryid}, subject = #{subject}, content = #{content}, filename0 = #{filename0}, filename1 = #{filename1}, filename2 = #{filename2},
		filename3 = #{filename3}, filename4 = #{filename4} where num = #{num} and email = #{email}
	</update>
	
	<delete id="deleteDiary" parameterType="hashmap">
		delete from diary where num = #{num} and email = #{email} and diaryid = #{diaryid}
	</delete>
	
	<select id="getNextNumber" resultType="int">
		select diaryser.nextval from dual
	</select>
	
	<insert id="insertDiary" parameterType="Diary">
		insert into diary(num, email, diaryid, subject, cdate, content, ip, filename0, filesize0, filename1, filesize1, filename2, filesize2, filename3, filesize3, filename4, filesize4) values(#{num},#{email},#{diaryid},#{subject},sysdate,#{content},#{ip},#{filename0},#{filesize0},#{filename1},#{filesize1},#{filename2},#{filesize2},#{filename3},#{filesize3},#{filename4},#{filesize4})
	</insert>
	
	
	<!-- <select id="getArticleCount" resultType="int" parameterType="hashmap">
		select nvl(count(*), 0) from board
		<if test="boardid !=null">
			WHERE boardid = #{boardid}
		</if>
	</select>
	
	<select id="getArticles" resultType="Board" parameterType="hashmap">
	select * from (select rownum rnum, a.* from (select num, writer, email, subject, passwd, reg_date, readcount, ref, re_step, re_level, 
	content, ip from board where boardid = #{boardid} order by ref desc, re_step) a) where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="getNextNumber" resultType="int">
		select boardser.nextval from dual
	</select>
	
	<update id="updateRe_step" parameterType="Board">
		update board set re_step=re_step+1 where ref= #{ref} and re_step > #{re_step} and boardid = #{boardid}
	</update>
	
	<insert id="insertBoard" parameterType="Board">
		insert into board(num, writer, email, subject, passwd, reg_date, ref, re_step, re_level, content, ip, boardid, filename, filesize)
		values(#{num},#{writer},#{email},#{subject},#{passwd}, sysdate, #{ref},#{re_step},#{re_level},#{content},#{ip},#{boardid},#{filename},#{filesize})
	</insert>
	

	<update id="addReadCount" parameterType="hashmap">
		update board set readcount=readcount+1 where num = #{num} and boardid = #{boardid}
	</update>
	
	<select id="getArticle" parameterType="hashmap" resultType="Board">
		select * from board where num = #{num} and boardid = #{boardid}
	</select>
	
	<update id="updateArticle" parameterType="Board">
		update board set writer=#{writer}, email=#{email}, subject=#{subject}, content=#{content} where num=#{num} and passwd = #{passwd}
	</update>
	
	<delete id="deleteArticle" parameterType="hashmap">
		delete from board where num= #{num} and passwd = #{passwd}
	</delete> -->
</mapper>